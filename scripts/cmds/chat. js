const axios = require("axios");

module.exports = {
  config: {
    name: "chat",
    aliases: ["sim", "robot", "ai", "bot"],
    version: "3.2.0",
    author: "YourFix+SimSimi",
    countDown: 3,
    role: 0,
    shortDescription: "Human-like AI Chatbot",
    longDescription: {
      en: "Chat in Bengali or English. AI replies if you use /chat <message> or mention the bot."
    },
    category: "ai",
    guide: {
      en: "{pn} <your message> | {pn} on/off | Type message with 'bot/ai' to auto-chat."
    },
  },

  langs: {
    en: {
      turnedOn: "✅ AI Auto Chat enabled!",
      turnedOff: "❌ AI Auto Chat disabled!",
      error: "Sorry, something went wrong. Please try again! 😅",
    },
  },

  onStart: async function ({ args, threadsData, message, event, getLang }) {
    try {
      if (args[0] == "on" || args[0] == "off") {
        await threadsData.set(event.threadID, args[0] == "on", "settings.simsimi");
        return message.reply(args[0] == "on" ? getLang("turnedOn") : getLang("turnedOff"));
      } else if (args.length > 0) {
        const userMessage = args.join(" ");
        const reply = await simsimiReply(userMessage);
        return message.reply(reply);
      }
    } catch (e) {
      console.error("Chat onStart error:", e.message);
      return message.reply(getLang("error"));
    }
  },

  onChat: async function ({ args, message, threadsData, event, isUserCallCommand, getLang }) {
    try {
      if (isUserCallCommand) return;
      const msg = args.join(" ");
      if (!msg || msg.length < 2) return;

      const isAutoModeOn = await threadsData.get(event.threadID, "settings.simsimi");
      const keywords = ["bot", "ai", "robot", "chatbot", "বট", "রোবট"];
      const mentionsBot = keywords.some((kw) => msg.toLowerCase().includes(kw));
      if (!isAutoModeOn && !mentionsBot) return;

      const reply = await simsimiReply(msg);
      setTimeout(() => message.reply(reply), 900);
    } catch (e) {
      console.error("Chat onChat error:", e.message);
    }
  },
};

// Helper: SimSimi API response (Bengali, fallback to English)
async function simsimiReply(input) {
  input = input.replace(/[\n\r]+/g, " ").trim();
  if (input.length < 1) return "😅 Please type something!";
  try {
    // Bengali first, fallback English
    let res = await axios.get("https://api.simsimi.vn/v1/simtalk", {
      params: { text: input, lc: "bn" }, timeout: 5000
    });
    if (res.data && res.data.message) return makeHuman(res.data.message);

    res = await axios.get("https://api.simsimi.vn/v1/simtalk", {
      params: { text: input, lc: "en" }, timeout: 5000
    });
    if (res.data && res.data.message) return makeHuman(res.data.message);

    return getFallback(input);
  } catch (e) {
    return getFallback(input);
  }
}

// Make responses feel more like a real chat
function makeHuman(str) {
  // Add casual!
  let msg = str;
  const emojis = [" 😊", " 😎", " 😄", " 👍", " 🤔", "❤️", "🔥"];
  if (Math.random() < 0.22) msg = msg + emojis[Math.floor(Math.random() * emojis.length)];
  const starters = ["Well,", "Hmm,", "So,", "Hey,", "See,", "Actually,"];
  if (Math.random() < 0.15) msg = starters[Math.floor(Math.random() * starters.length)] + " " + msg;
  return msg;
}

// Simple fallback when SimSimi doesn't answer
function getFallback(input) {
  input = input.toLowerCase();
  if (/hello|hi|হাই/.test(input))
    return "হেলো! 😊 কেমন আছো?";
  if (/how are you|কেমন আছো/.test(input))
    return "ভালো আছি, তুমি কেমন?";
  if (/joke|funny|মজার|কৌতুক/.test(input))
    return "একটা মজার কথা বলি? কম্পিউটারের সব সমস্যা 'ইতরনেট'-এর! 😂";
  return "ওটা বোধহয় ভালভাবে বুঝতে পারিনি! 😅";
}
